version: "3.8"
services:
  # server
  phoenix:
    build:
      context: ./server
      target: dev
    depends_on:
      - pg
      - s3
    environment:
      - BLOGSLEY_SECRET_KEY=${BLOGSLEY_SECRET_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_HOST=${S3_HOST}
      - S3_BUCKET=${S3_BUCKET}
    ports:
      - 4000:4000
    networks:
      - blogsley
    hostname: graphql.${BLOGSLEY_DOMAIN}
    restart: "no"
    volumes:
      - "./server:/app"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phoenix.rule=Host(`graphql.${BLOGSLEY_DOMAIN}`)"
      - "traefik.http.routers.phoenix.entrypoints=web"

  nginx:
    image: nginx
    ports:
        - 8001:80
    networks:
      - blogsley
    hostname: media.${BLOGSLEY_DOMAIN}
    volumes:
        - ./volumes/minio:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`media.${BLOGSLEY_DOMAIN}`)"
      - "traefik.http.routers.nginx.entrypoints=web"

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - pg
    restart: always
    ports:
        - "8888:80"
    environment:
        PGADMIN_DEFAULT_EMAIL: 1234@admin.com
        PGADMIN_DEFAULT_PASSWORD: 1234
    volumes:
        - ./volumes/pgadmin:/var/lib/pgadmin4/storage
    networks:
      - blogsley
    hostname: pgadmin.${BLOGSLEY_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${BLOGSLEY_DOMAIN}`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"

  # Database
  pg:
    image: postgres:12.3
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: "no"
    volumes:
      - "./volumes/postgres:/var/lib/postgresql/data"
    networks:
      - blogsley
  

  # Front-end
  admin:
    build:
      # context: admin
      context: ./admin
      target: quasar-dev
    ports:
      - 8080:8080
    restart: "no"
    volumes:
      - "./admin:/admin"
    networks:
      - blogsley
    environment:
      - SERVER_URL=admin.${BLOGSLEY_DOMAIN}
    hostname: admin.${BLOGSLEY_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`admin.${BLOGSLEY_DOMAIN}`)"
      - "traefik.http.routers.admin.entrypoints=web"

  # Storage
  s3:
    image: minio/minio
    ports:
      - 9000:9000
    hostname: s3.${BLOGSLEY_DOMAIN}
    volumes:
      - ./volumes/minio:/minio
    networks:
      - blogsley
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.s3.rule=Host(`s3.${BLOGSLEY_DOMAIN}`)"
      - "traefik.http.routers.s3.entrypoints=web"

    command: server /minio

  traefik:
    image: "traefik:v2.3"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8008:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - blogsley

networks:
  blogsley:
    external: true